%% Ben Cannon
function [t,z] = main_test_Nrobots
clearvars -global %Essential for this to work
% Initialize
tend=100;   %Time we run for
tspan = [0 tend];

%Define Path
waypoints = [1 0; 5 0; 5 5];

% waypoints = [10 10; 9 9; 5 4; 2 3];

% waypoints = [2.00    1.00;
%     1.25    1.75;
%     5.25    8.25;
%     7.25    8.75;
%     11.75   10.75;
%     12.00   10.00];


%Initial Carposes
carStates = [


%Number of cars
numRobots = length(carStates)/3;

% Get the starting points and starting angle for each robot
[ordered_startingpointx,ordered_startingpointy,startingAngle,order] = ...
    calculateCarPos(carStates,waypoints,carLetter,numRobots);
for k = 1:length(ordered_startingpointx)
    orderered_startingPoints(k) = [ordered_startingpointx,ordered_startingpointy];
end

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% WORKS
% startingPoints = [1 0; 0 0; -1 0];
% startingAngle = 0;
% order1 = 1;
% order2 = 2;
% order3 = 3;
% ic = [1; 1; pi; order1;
%     1; 4; 0; order2;
%     4; 3; 0; order3];
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%Create initial conditions
ic = [];
for k = 1:numRobots
ic = [ic, carStates(k,:),order(k)]; 
end
ic = ic';



opts = odeset('RelTol',1e-2,'AbsTol',1e-4);
[t,z] = ode45(@(t,z) diffdrive_test_Nrobots(z,waypoints,ordered_startingPoints, startingAngle), tspan, ic, opts);

% Plot immediately
plot_Z_immediately(t, z)

% plot Point by Point
%plot_Z_pointbypoint(t,z)

end

